///////////////////////////////////////////////////////////////////////////////
//
// This file was automatically generated by RANOREX.
// DO NOT MODIFY THIS FILE! It is regenerated by the designer.
// All your modifications will be lost!
// http://www.ranorex.com
//
///////////////////////////////////////////////////////////////////////////////

using System;
using System.Collections.Generic;
using System.Text;
using System.Text.RegularExpressions;
using System.Drawing;
using System.Threading;
using WinForms = System.Windows.Forms;

using Ranorex;
using Ranorex.Core;
using Ranorex.Core.Testing;
using Ranorex.Core.Repository;

namespace HelloWorldKTSample2
{
#pragma warning disable 0436 //(CS0436) The type 'type' in 'assembly' conflicts with the imported type 'type2' in 'assembly'. Using the type defined in 'assembly'.
    /// <summary>
    ///The HelloKeywordsearch recording.
    /// </summary>
    [TestModule("8e12bb38-9dae-4313-92a8-8bda17ea5277", ModuleType.Recording, 1)]
    public partial class HelloKeywordsearch : ITestModule
    {
        /// <summary>
        /// Holds an instance of the HelloWorldKTSample2Repository repository.
        /// </summary>
        public static HelloWorldKTSample2Repository repo = HelloWorldKTSample2Repository.Instance;

        static HelloKeywordsearch instance = new HelloKeywordsearch();

        /// <summary>
        /// Constructs a new instance.
        /// </summary>
        public HelloKeywordsearch()
        {
            searchKeyword = "Helloooo";
        }

        /// <summary>
        /// Gets a static instance of this recording.
        /// </summary>
        public static HelloKeywordsearch Instance
        {
            get { return instance; }
        }

#region Variables

        string _searchKeyword;

        /// <summary>
        /// Gets or sets the value of variable searchKeyword.
        /// </summary>
        [TestVariable("2ba11d18-af79-4605-8cba-e7733af129b3")]
        public string searchKeyword
        {
            get { return _searchKeyword; }
            set { _searchKeyword = value; }
        }

#endregion

        /// <summary>
        /// Starts the replay of the static recording <see cref="Instance"/>.
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        public static void Start()
        {
            TestModuleRunner.Run(Instance);
        }

        /// <summary>
        /// Performs the playback of actions in this recording.
        /// </summary>
        /// <remarks>You should not call this method directly, instead pass the module
        /// instance to the <see cref="TestModuleRunner.Run(ITestModule)"/> method
        /// that will in turn invoke this method.</remarks>
        [System.CodeDom.Compiler.GeneratedCode("Ranorex", "8.2")]
        void ITestModule.Run()
        {
            Mouse.DefaultMoveTime = 300;
            Keyboard.DefaultKeyPressTime = 100;
            Delay.SpeedFactor = 1.00;

            Init();

            Report.Log(ReportLevel.Info, "Website", "Opening web site 'http://google.com' with browser 'chrome' in maximized mode.", new RecordItemIndex(0));
            Host.Current.OpenBrowser("http://google.com", "chrome", "", false, true, false, false, false);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Mouse", "Mouse Left Click item 'Google.InputTagQ' at Center.", repo.Google.InputTagQInfo, new RecordItemIndex(1));
            repo.Google.InputTagQ.Click();
            Delay.Milliseconds(200);
            
            //Report.Log(ReportLevel.Info, "Keyboard", "Key sequence 'Hello' with focus on 'Google.InputTagQ'.", repo.Google.InputTagQInfo, new RecordItemIndex(2));
            //repo.Google.InputTagQ.PressKeys("Hello");
            //Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Set value", "Setting attribute TagValue to '$searchKeyword' on item 'Google.InputTagQ'.", repo.Google.InputTagQInfo, new RecordItemIndex(3));
            repo.Google.InputTagQ.Element.SetAttributeValue("TagValue", searchKeyword);
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Keyboard", "Key sequence '{Return}' with focus on 'Google.InputTagQ'.", repo.Google.InputTagQInfo, new RecordItemIndex(4));
            repo.Google.InputTagQ.PressKeys("{Return}");
            Delay.Milliseconds(0);
            
            Report.Log(ReportLevel.Info, "Validation", "Validating Exists on item 'Google.ResultStats'.", repo.Google.ResultStatsInfo, new RecordItemIndex(5));
            Validate.Exists(repo.Google.ResultStatsInfo);
            Delay.Milliseconds(100);
            
        }

#region Image Feature Data
#endregion
    }
#pragma warning restore 0436
}
